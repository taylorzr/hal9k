#!/usr/bin/env ruby

require 'bundler/setup'
require 'hal9k'

# Maybe support a dsl after the non-dsl setup is working
# Hal9k.cli do
#   flag :application, :a
#   run { puts '-> heroku' }

#   command :status do
#     run { puts '-> heroku status' }
#   end

#   command :config do
#     command :get do
#       run(variable) { puts "-> heroku config get #{variable}" }
#     end

#     command :set do
#       run(*variables) { puts "-> heroku config set #{variables.join(' ')}" }
#     end
#   end
# end

module Heroku
  class Cli < Hal9k::Command
    # Default to cascading scope (non local)
    flag :application, :a, local: false

    def call
      puts '-> heroku'
    end

    class Status < Hal9k::Command
      mount Cli

      def call
        puts '-> heroku status'
      end
    end

    class Config < Hal9k::Command
      mount Cli

      # Maybe allow one command to handle mutiple paths
      # All the flags would need to be the same
      # register :get,   with: self
      # register :set,   with: self
      # register :unset, with: self

      def call
        puts '-> heroku config'
      end

      class Get < Hal9k::Command
        mount Config
        # register :get, with: Config

        argument :variable, type: Hal9k::String

        def call
          puts "-> heroku config get #{arguments.first.upcase}"
        end
      end

      class Set < Hal9k::Command
        mount Config
        # register :set, with: Config

        argument :variables, count: :*

        def call
          puts "-> heroku config set #{arguments.join(' ')}"
        end
      end

      class Unset < Hal9k::Command
        mount Config
        # register :unset, with: Config

        argument :variables, count: :*

        def call
          puts "-> heroku config unset #{arguments.join(' ')}"
        end
      end
    end
  end
end

Heroku::Cli.start

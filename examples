# #!/usr/bin/env ruby

# class Echo
#   def initialize(message:)
#     @message = message
#   end

#   def call
#     message
#   end
# end

# class Eat < Echo
#   def call
#     message = super
#     puts "Eating #{message}"
#   end
# end

# # hal hi # => hi
# Hal9k.mount Echo => Hal9k.root


# # Mount under namespace
# Hal9k.mount Production::Deploy => 'production/deploy'
# Hal9k.mount Staging::Deploy => 'staging/deploy'


# # Or should we be able to mount a common command in different
# # namespaces, we would then need to provide the current path so that a
# # class could change behaviour based on the path
# Hal9k.mount Deploy => 'production/deploy'
# Hal9k.mount Deploy => 'staging/deploy'

# class Command << Hal9k::Comand
#   register :deploy, Production
#   register :deploy, Staging
# end


# # Mannequin examples
# ./mannequin unsecured_loan late -a some_heroku_app
# ./mannequin webbank unsecured_loan late -a some_heroku_app

# # Heroku
# heroku config:get KEY
# heroku config:set KEY=value
